@inherits LayoutComponentBase
@using Blazored.Toast
@using Blazored.Toast.Services
@using Blazored.Toast.Configuration
@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject UserTesting.Application.Contracts.Persistence.Users.IUsersRepository _users;
@inject IToastService toastService;


<CascadingValue Value="CurrentUser" Name="CurrentUser">
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <div class="main">
            <div class="top-row px-4 auth">
                <LoginDisplay />
                <UserTesting.Server.Components.Users.UserNotifierMini.UserNotifier></UserTesting.Server.Components.Users.UserNotifierMini.UserNotifier>

            </div>

            <div class="content px-4">


                @Body

                <BlazoredToasts Position="ToastPosition.BottomRight"
                                Timeout="10"
                                IconType="IconType.Material"
                                ErrorIcon="error_outline"
                                InfoIcon="school"
                                SuccessIcon="done_outline"
                                WarningIcon="warning" />
            </div>
        </div>
    </div>
</CascadingValue>

@code{
    public ApplicationUser CurrentUser { get; set; } = new ApplicationUser();


    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var User = authState.User;

        if (User.Identity.IsAuthenticated)
        {

            CurrentUser = await _users.FindByNameAsync(User.Identity.Name, new System.Threading.CancellationToken());
            CurrentUser.IsAuthenticated = User.Identity.IsAuthenticated;

        }
        else
        {
            CurrentUser = new ApplicationUser();
        }



    }



}